// Generated by Selenium IDE
using OpenQA.Selenium;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace PicoPlacaPredictor.Tests.UI
{
    [TestClass]
    public class InputFieldsValidateEscenarioTest : BrowserNavegationTest
    {
        PACHome pageAction = new PACHome();

        /// <summary>
        /// The predict has no restrictions driver
        /// </summary>
        [TestMethod]
        public void NoRestrictions()
        {
            pageAction.NavegateToLocalWebApp(driver);
            // Fill inputs
            pageAction.SetValueCarPlate(driver, "xba8920");
            pageAction.SetValueDateTravel(driver, "10092020");
            pageAction.SetValueTimeTravel(driver, "1700");
            pageAction.SubmitPageForm(driver);
            // Wait to response
            System.Threading.Thread.Sleep(2500);
            // Assert results
            Assert.AreEqual(pageAction.GetResultsPredictTitle(driver), "GREAT NEWS");
            Assert.AreEqual(pageAction.GetResultsPredictDescription(driver), "You have NO traffic restriction for all that day, have a good trip and drive carefully.");
        }

        /// <summary>
        /// The predict has no restrictions because it's weekend in the future
        /// </summary>
        [TestMethod]
        public void NoRestrictionsWeekend()
        {
            pageAction.NavegateToLocalWebApp(driver);
            // Fill inputs
            pageAction.SetValueCarPlate(driver, "xba8920");
            pageAction.SetValueDateTravel(driver, "12092020");
            pageAction.SetValueTimeTravel(driver, "1700");
            pageAction.SubmitPageForm(driver);
            // Wait to response
            System.Threading.Thread.Sleep(2500);
            // Asserts results
            Assert.AreEqual(pageAction.GetResultsPredictTitle(driver), "GREAT NEWS");
            Assert.AreEqual(pageAction.GetResultsPredictDescription(driver), "You'll be traveling on weekend so You have NO restriction for do it, have a good trip and drive carefully.");
        }

        /// <summary>
        /// The pretict has restrict in the afternoon
        /// </summary>
        [TestMethod]
        public void RestrictionTimeAfternoon()
        {
            pageAction.NavegateToLocalWebApp(driver);
            // Fill inputs
            pageAction.SetValueCarPlate(driver, "xba8920");
            pageAction.SetValueDateTravel(driver, "11092020");
            pageAction.SetValueTimeTravel(driver, "1700");
            pageAction.SubmitPageForm(driver);
            // Wait to response
            System.Threading.Thread.Sleep(2500);
            // Asserts results
            Assert.AreEqual(pageAction.GetResultsPredictTitle(driver), "DANGER");
            Assert.AreEqual(pageAction.GetResultsPredictDescription(driver), "You are planning to drive during restricted hours; you could use alternative vehicles of transportation or you can wait for the 'Pico y Placa' schedule AFTERNOON to end at 19:30:00 to continue driving. Remember that there are two restriction time slots so try to take your precautions.");
            var testLastDigits = pageAction.CountResultsPredictLastDigitsByDay(driver);
            Assert.IsTrue(testLastDigits > 0);
            var testTableRestrictionInfo = pageAction.CountResultsPredictTableInfo(driver);
            Assert.IsTrue(testTableRestrictionInfo > 0);
        }

        /// <summary>
        /// The pretict has restrict in the morning
        /// </summary>
        [TestMethod]
        public void RestrictionTimeMorning()
        {
            pageAction.NavegateToLocalWebApp(driver);
            // Fill inputs
            pageAction.SetValueCarPlate(driver, "xba8920");
            pageAction.SetValueDateTravel(driver, "11092020");
            pageAction.SetValueTimeTravel(driver, "0920");
            pageAction.SubmitPageForm(driver);
            // Wait to response
            System.Threading.Thread.Sleep(2500);
            // Asserts results
            Assert.AreEqual(pageAction.GetResultsPredictTitle(driver), "DANGER");
            Assert.AreEqual(pageAction.GetResultsPredictDescription(driver), "You are planning to drive during restricted hours; you could use alternative vehicles of transportation or you can wait for the 'Pico y Placa' schedule MORNING to end at 09:30:00 to continue driving. Remember that there are two restriction time slots so try to take your precautions.");
            var testLastDigits = pageAction.CountResultsPredictLastDigitsByDay(driver);
            Assert.IsTrue(testLastDigits > 0);
            var testTableRestrictionInfo = pageAction.CountResultsPredictTableInfo(driver);
            Assert.IsTrue(testTableRestrictionInfo > 0);
        }

        /// <summary>
        /// The pretict has NO restrict but worning because de plate number is on day restriction
        /// </summary>
        [TestMethod]
        public void RestrictionDayOnly()
        {
            pageAction.NavegateToLocalWebApp(driver);
            // Fill inputs
            pageAction.SetValueCarPlate(driver, "xba8920");
            pageAction.SetValueDateTravel(driver, "11092020");
            pageAction.SetValueTimeTravel(driver, "1220");
            pageAction.SubmitPageForm(driver);
            // Wait to response
            System.Threading.Thread.Sleep(2500);
            // Asserts results
            Assert.AreEqual(pageAction.GetResultsPredictTitle(driver), "WARNING");
            Assert.AreEqual(pageAction.GetResultsPredictDescription(driver), "The day of travel does have a vehicle restriction but NOT at the indicated time. You can circulate freely but be cautious and avoid driving during restricted hours.");
            var testLastDigits = pageAction.CountResultsPredictLastDigitsByDay(driver);
            Assert.IsTrue(testLastDigits > 0);
            var testTableRestrictionInfo = pageAction.CountResultsPredictTableInfo(driver);
            Assert.IsTrue(testTableRestrictionInfo > 0);
        }
    }
}