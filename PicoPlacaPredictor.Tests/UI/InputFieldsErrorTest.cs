// Generated by Selenium IDE
using OpenQA.Selenium;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace PicoPlacaPredictor.Tests.UI
{
    [TestClass]
    public partial class InputFieldsErrorTest : BrowserNavegationTest
    {
        PACHome pageActions = new PACHome();
        [TestMethod]
        public void InputFieldsError()
        {
            pageActions.NavegateToLocalWebApp(driver);
            // No values fill
            pageActions.SubmitPageForm(driver);
            Assert.AreEqual(pageActions.GetValueCarPlateError(driver), "The car plate is required");
            Assert.AreEqual(pageActions.GetValueDateTravelError(driver), "The date field is required");
            Assert.AreEqual(pageActions.GetValueTimeTravelError(driver), "The time field is required");
            pageActions.ClearHomePage(driver);
            // Incorrect all values
            pageActions.SetValueCarPlate(driver,"xba-8927");
            pageActions.SetValueDateTravel(driver,"99/99/9999");
            pageActions.SetValueTimeTravel(driver, "29:99");
            pageActions.SubmitPageForm(driver);
            Assert.AreEqual(pageActions.GetValueDateTravelError(driver), "Please enter a date valid in format dd/mm/yyyy, ex: 31/12/2020");
            Assert.AreEqual(pageActions.GetValueTimeTravelError(driver), "Please enter a time valid in format hh:mm, ex: 14:32");
            pageActions.ClearHomePage(driver);

            // Date and time before current
            pageActions.SetValueCarPlate(driver, "xba8927");
            pageActions.SetValueDateTravel(driver, "20/08/2020");
            pageActions.SetValueTimeTravel(driver, "14:00");
            pageActions.SubmitPageForm(driver);
            System.Threading.Thread.Sleep(2500);
            Assert.AreEqual(pageActions.GetValidationPredictTitle(driver), "Validations for Predictor");
            Assert.AreEqual(pageActions.GetValidationPredictDescription(driver), "The combined date and time fields must be after current");
        }
    }
}